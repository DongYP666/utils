1 开发调研
1.1 需求描述
MS的电子表格（Excel）是Office的重要成员，是保存统计数据的一种常用格式。作为办公文档，势必要涉及到的电子文档的交换，Excel是一种在企业中非常通用的文件格式，打印和管理也比较方便。
在一个Java应用中，将一部分数据生成Excel格式，是与其他系统无缝连接的重要手段。

1.2 Excel开发常用开源工具
在开源世界中，有两套比较有影响的API可供使用，一个是POI，一个是jExcelAPI。

1.3 比较开源工具的优缺点
1.3.1 Jxl优缺点
Jxl特征有如下描述：
● 支持Excel 95-2000的所有版本
● 生成Excel 2000标准格式
● 支持字体、数字、日期操作
● 能够修饰单元格属性
● 支持图像和图表
应该说以上功能已经能够大致满足我们的需要。最关键的是这套API是纯Java的，并不依赖Windows系统，即使运行在Linux下，它同样能够正确的处理Excel文件。
另外需要说明的是，这套API对图形和图表的支持很有限，而且仅仅识别PNG格式。

1.3.2 Poi优缺点
Jakarta 的 POI Project 与 Java Excel API 在开源世界中可以说是并驾齐驱，但是也各有优劣，
poi在某些细节有些小Bug并且不支持写入图片(poi其实可以写入图片，不过没有jxl来的方便，比较麻烦)，其他方面都挺不错的；
而JXL提供了对图片的支持（但是仅仅支持png格式的图片），问题就是对公式支持不是很好，但还是提供了简单的公式读取支持。
因此你的项目中要选用什么样的第三方插件为完全由你的应用来决定。如果你的软件是跟财务有相当的关系的话，建议采用 POI Project，
就我所在目前的项目来说由于用不到计算公式，而且很可能需要导出图片，因此，我的选择是 JXL 。

1.4 性能比较以及最终选择
1.4.1 内存消耗：（来自网络）
谈下JVM虚拟机内存消耗的情况.
数据量3000条数据,每条60列.JVM虚拟机内存大小64M.
使用POI:运行到2800条左右就报内存溢出.
使用JXL:3000条全部出来,并且内存还有21M的空间.
可想而知,在对内存的消耗方面差距还是挺大的.
也许是由于JXL在对资源回收利用方面做的还挺不错的。

1.4.2 速度效率（读取excel数据）（来自网络）
文件          POI加载耗时  POI总耗时   JXL加载耗时   Jxl总耗时
文件大小57KB   1172 ms     1172 ms     1265 ms     2250 ms
文件大小652KB  2297 ms     2313 ms     4406 ms     9750 ms
文件大小2.24M  3109 ms     3140 ms     16313ms     37453ms

1.4.3 写excel速度效率
jxl插入数据比poi速度要快

1.4.4 功能对比
相比提供的功能的话,JXL相对弱了点.所以如果要实现的功能比较复杂的情况下可以考虑使用POI,但如果只想生成一些大数据量可以考虑使用JXL,或者CSV也是一个不错的选择,不过CSV并不是真正的excel，然而jxl插入数据比poi速度要快。


